/**
 * THIS FILE IS GENERATED BY jsonrpcstub, DO NOT CHANGE IT!!!!!
 */

#ifndef _ABSTRACTMYSTUBSERVER_H_
#define _ABSTRACTMYSTUBSERVER_H_

#include <jsonrpc/rpc.h>

class AbstractMyStubServer : public jsonrpc::AbstractServer<AbstractMyStubServer>
{
    public:
        AbstractMyStubServer(jsonrpc::AbstractServerConnector* conn) :
            jsonrpc::AbstractServer<AbstractMyStubServer>(conn) 
        {
            this->bindAndAddMethod(new jsonrpc::Procedure("addNumbers", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_INTEGER, "param1",jsonrpc::JSON_INTEGER,"param2",jsonrpc::JSON_INTEGER, NULL), &AbstractMyStubServer::addNumbersI);
            this->bindAndAddNotification(new jsonrpc::Procedure("notifyServer", jsonrpc::PARAMS_BY_NAME,  NULL), &AbstractMyStubServer::notifyServerI);
            this->bindAndAddMethod(new jsonrpc::Procedure("sayHello", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_STRING, "name",jsonrpc::JSON_STRING, NULL), &AbstractMyStubServer::sayHelloI);

        }
        
        inline virtual void addNumbersI(const Json::Value& request, Json::Value& response) 
        {
            response = this->addNumbers(request[0u].asInt(), request[1u].asInt());
        }

        inline virtual void notifyServerI(const Json::Value& request) 
        {
            this->notifyServer();
        }

        inline virtual void sayHelloI(const Json::Value& request, Json::Value& response) 
        {
            response = this->sayHello(request["name"].asString());
        }


        virtual int addNumbers(const int& param1, const int& param2) = 0;
        virtual void notifyServer() = 0;
        virtual std::string sayHello(const std::string& name) = 0;

};
#endif //_ABSTRACTMYSTUBSERVER_H_
