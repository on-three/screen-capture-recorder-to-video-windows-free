# Required metadata
sonar.projectKey=cpp.libjson-rpc-cpp
sonar.projectName=libjson-rpc-cpp
sonar.projectVersion=0.3

# Description of project (optional)
sonar.projectDescription=libjson-rpc-cpp

# Comma-separated paths to directories with sources (required)
sonar.sources=src

# Comma-separated paths to directories containing tests.
sonar.tests=src/test

# Comma-separated list of include dirs
sonar.cxx.include_directories=src,/usr/include,/usr/local/include,/usr/include/x86_64-linux-gnu,/usr/include/c++/4.6,/usr/include/c++/4.6/x86_64-linux-gnu,/usr/include/linux,/usr/include/c++/4.6/tr1

# Comma separated list of macros which should be used during analysis
sonar.cxx.defines=BOOST_AUTO_TEST_SUITE(a),BOOST_AUTO_TEST_SUITE_END(),BOOST_AUTO_TEST_CASE(a) a(),BOOST_CHECK_EQUAL(a\\,b),BOOST_REQUIRE_EQUAL(a\\,b),BOOST_REQUIRE_NE(a\\,b),BOOST_REQUIRE_GE(a\\,b),BOOST_CHECK_GE(a\\,b)

# Language
sonar.language=c++

# cppcheck report
#sonar.cxx.cppcheck.reportPath=cppcheck.xml

# vera report
#sonar.cxx.vera.reportPath=vera.xml

# test report
#sonar.cxx.xunit.xsltURL=boosttest-1.x-to-junit-1.0.xsl
#sonar.cxx.xunit.reportPath=testreport.xml

# coverage reports
#sonar.cxx.coverage.reportPath=unitcoverage.xml
#sonar.cxx.coverage.itReportPath=integrationcoverage.xml
#sonar.cxx.coverage.overallReportPath=overallcoverage.xml

# memleak reports
#sonar.cxx.valgrind.reportPath=valgrind-report-*.xml

# Optional comma-separated list of additional libraries folders (such as /usr/include)
# sonar.cpp.library.directories=lib

# Optional path to the CppCheck program required to activate some CppCheck rules
# sonar.cpp.cppcheck.path=C:/Program Files/Cppcheck/cppcheck.exe

# Optional specific predefined macros
# sonar.cpp.predefinedMacros=#define MY_MACRO(a) ((a)+1),#define DEBUG

# Encoding of the source files
sonar.sourceEncoding=UTF-8
